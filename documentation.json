{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "MyLibService",
            "id": "injectable-MyLibService-870d9838ce65e43548d0594926e5cdae512a2633198199504d4b29a9fae2db2888e7c381da0d7dee938ff9871e02f9c2dc398222e53eefb6503b152b71a23cf9",
            "file": "projects/my-lib/src/lib/my-lib.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyLibService {\n\n  constructor() { }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "MyLibComponent",
            "id": "component-MyLibComponent-fd3379c8b86be78a8c856fb6f0cd9a1ff51dc154f4a6584bac52e3940ea54c1be578efbb9807129e697fe2332985e7c9323efc1094e1af92b0903ed2d9a702a2",
            "file": "projects/my-lib/src/lib/my-lib.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "my-my-lib",
            "styleUrls": [],
            "styles": [],
            "template": "<p>\n  my-lib works!\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'my-my-lib',\n  template: `\n    <p>\n      my-lib works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class MyLibComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TestComponent",
            "id": "component-TestComponent-8676884f207d331f71ce799b41e13a7e4951e9dea284251f2599177e4fd8b82027165462cd93e170ba25ee85abe45942f7255758ec8cc6c3f11f0d2568027806",
            "file": "projects/my-lib/src/lib/test/test.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "test",
            "styleUrls": [
                "./test.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./test.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "text1InputMode",
                    "defaultValue": "'need to update'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "text2NoInputMode",
                    "defaultValue": "'need to update'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "initBadge",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit} from '@angular/core';\n\n@Component({\n    selector:        'test',\n    templateUrl:     './test.component.html',\n    styleUrls:       ['./test.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nclass TestComponent implements OnInit {\n    @Input() text1InputMode     = 'need to update'\n    text2NoInputMode  = 'need to update'\n\n    constructor(private cdr: ChangeDetectorRef) {}\n\n\n    ngOnInit(): void {\n        this.initBadge();\n        this.cdr.detectChanges();\n\n    }\n\n    initBadge(): void {\n        this.text1InputMode =\"Updated\"\n        this.text2NoInputMode =\"Updated\"\n    }\n}\n\nexport {TestComponent};\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./test.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "  <div>\n    input mode: {{text1InputMode}}\n  </div>\n  <div>\n    not input mode: {{text2NoInputMode}}\n  </div>\n"
        }
    ],
    "modules": [
        {
            "name": "MyLibModule",
            "id": "module-MyLibModule-23565f465eaecb0a95ba8ea47dccb201d13355012ae24bee58735c0bccee667b3ee02412b8806a38f81908105ae194bf596b6852a4f0eb0900c85da0f3c24958",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/my-lib/src/lib/my-lib.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { MyLibComponent } from './my-lib.component';\n\n\n\n@NgModule({\n  declarations: [\n    MyLibComponent,\n  ],\n  imports: [\n  ],\n  exports: [\n    MyLibComponent\n  ]\n})\nexport class MyLibModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "MyLibComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MyLibComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TestModule",
            "id": "module-TestModule-e15066ba2e3052f365c5cc4134d6f2f0f30455e96fb17e9acfa7b5759db2fb0901737cf6f192c4ac903a8c13481f41db46f7c7e1b09bad38465392b165eff4a4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/my-lib/src/lib/test/test.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {TestComponent} from './test.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n    declarations: [\n        TestComponent\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule\n    ],\n    exports: [\n        TestComponent\n    ]\n})\nclass TestModule {\n}\nexport {TestModule};\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TestComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TestComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "test",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/my-lib/src/lib/test/test.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TEST_STORY.bind({})"
            },
            {
                "name": "TEST_STORY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/my-lib/src/lib/test/test.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TestComponent>",
                "defaultValue": "(args) => ({\n    props: args\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "projects/my-lib/src/lib/test/test.stories.ts": [
                {
                    "name": "test",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/my-lib/src/lib/test/test.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TEST_STORY.bind({})"
                },
                {
                    "name": "TEST_STORY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/my-lib/src/lib/test/test.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TestComponent>",
                    "defaultValue": "(args) => ({\n    props: args\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/my-lib/src/lib/my-lib.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MyLibComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/my-lib/src/lib/my-lib.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MyLibService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/my-lib/src/lib/test/test.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TestComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/my-lib/src/lib/test/test.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "test",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/my-lib/src/lib/test/test.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TEST_STORY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}